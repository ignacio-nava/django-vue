import{g as I}from"./postsApi.js";import{d as f,c as l,o as r,b as n,t as c,e as _,F as y,f as d,g,h as v,i as E}from"./index.js";const k={class:"flex-column gap-050"},h={key:0},b=f({__name:"PostItem",props:{post:{},userId:{},setEditor:{type:Function}},setup(p){return(t,o)=>{var s,e,a;return r(),l(y,null,[n("h2",null,c((s=t.post)==null?void 0:s.title),1),n("div",k,[n("p",null,c((e=t.post)==null?void 0:e.body),1),Number(t.userId)===((a=t.post)==null?void 0:a.owner)?(r(),l("span",h,[n("button",{onClick:o[0]||(o[0]=(...i)=>t.setEditor&&t.setEditor(...i)),class:"fs-090 button-small"}," Edit ")])):_("",!0)])],64)}}}),F={key:0},w={key:2},B=f({__name:"PostDetail",props:{userId:{},postId:{}},setup(p){const t=p,o=d(null),s=d(!0),e=d(!1),a=()=>{e.value=!e.value};return g(async()=>{try{if(!t.postId)throw new Error("No id for Post item");o.value=await I(t.postId)}catch(i){console.error(i)}finally{s.value=!1}}),(i,u)=>s.value?(r(),l("p",F,"Loading...")):e.value?(r(),l("div",w,u[0]||(u[0]=[n("h2",null,"Editing...",-1)]))):(r(),v(b,{key:1,post:o.value,userId:t.userId,setEditor:a},null,8,["post","userId"]))}}),m=document.querySelector("#post-item");m&&E(["userId","postId"],m,B);
